# Generated by Django 4.0.6 on 2022-07-26 14:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('skillsets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_no', models.CharField(max_length=11, unique=True)),
                ('gender', models.CharField(max_length=8)),
                ('birthday', models.DateField()),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('city', models.CharField(max_length=32)),
                ('lga', models.CharField(blank=True, default='', max_length=32)),
                ('state', models.CharField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('bio', models.TextField(blank=True, default='')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='main/users/profile-pics')),
                ('linkedin', models.URLField(blank=True, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('author', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('bio', models.TextField()),
                ('registration_no', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, default='', max_length=11)),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('city', models.CharField(blank=True, default='', max_length=32)),
                ('lga', models.CharField(blank=True, default='', max_length=32)),
                ('state', models.CharField(blank=True, default='', max_length=32)),
                ('country', models.CharField(blank=True, default='', max_length=32)),
                ('employees', models.PositiveIntegerField(blank=True, null=True)),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('verified', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(default='Unknown', on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
                ('employee_users', models.ManyToManyField(related_name='registered_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='UserWorkProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=64)),
                ('employment_type', models.CharField(blank=True, default='', max_length=12)),
                ('description', models.TextField(blank=True, default='')),
                ('address', models.CharField(blank=True, default='', max_length=255)),
                ('city', models.CharField(blank=True, default='', max_length=32)),
                ('lga', models.CharField(blank=True, default='', max_length=32)),
                ('state', models.CharField(blank=True, default='', max_length=32)),
                ('country', models.CharField(blank=True, default='', max_length=32)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current_job', models.BooleanField(default=False)),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('review', models.CharField(blank=True, default='', max_length=128)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.PROTECT, to='users.company')),
                ('job', models.ForeignKey(default='Unknown', on_delete=django.db.models.deletion.PROTECT, to='skillsets.job')),
                ('user', models.ForeignKey(default='Unknown', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=255, verbose_name='name of model object')),
                ('object_model', models.CharField(max_length=128, verbose_name='name of the model')),
                ('object_id', models.PositiveIntegerField(verbose_name='id of the model object')),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('comment', models.TextField(blank=True, default='')),
                ('anonymous', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('reviewer', models.ForeignKey(default='Anonymous', on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('acronym', models.CharField(blank=True, default='', max_length=12)),
                ('description', models.TextField(blank=True, default='')),
                ('city', models.CharField(blank=True, default='', max_length=32)),
                ('lga', models.CharField(blank=True, default='', max_length=32)),
                ('state', models.CharField(blank=True, default='', max_length=32)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, default='', max_length=11)),
                ('url', models.URLField(blank=True, null=True, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('job', models.ManyToManyField(related_name='association_model_job', to='skillsets.job')),
                ('job_category', models.ManyToManyField(related_name='association_model_job_category', to='skillsets.jobcategory')),
                ('job_subcategory', models.ManyToManyField(related_name='association_model_job_subcategory', to='skillsets.jobsubcategory')),
                ('members', models.ManyToManyField(related_name='users', to=settings.AUTH_USER_MODEL)),
                ('skill', models.ManyToManyField(related_name='association_model_skill', to='skillsets.skill')),
            ],
        ),
    ]
