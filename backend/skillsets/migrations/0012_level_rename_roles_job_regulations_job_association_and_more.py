# Generated by Django 4.0.6 on 2022-08-11 23:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0019_alter_association_id_alter_company_id_and_more'),
        ('skillsets', '0011_alter_job_id_alter_jobcategory_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('outlook_details', models.TextField(blank=True, null=True)),
                ('outlook_summary', models.CharField(blank=True, default='', max_length=32)),
                ('work_start_time', models.TimeField(blank=True, null=True)),
                ('work_end_time', models.TimeField(blank=True, null=True)),
                ('min_salary', models.PositiveBigIntegerField(blank=True, null=True)),
                ('max_salary', models.PositiveBigIntegerField(blank=True, null=True)),
                ('risks', models.TextField(blank=True, default='')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.RenameField(
            model_name='job',
            old_name='roles',
            new_name='regulations',
        ),
        migrations.AddField(
            model_name='job',
            name='association',
            field=models.ManyToManyField(blank=True, related_name='job_associations', to='users.association'),
        ),
        migrations.AddField(
            model_name='job',
            name='max_salary',
            field=models.PositiveBigIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='min_salary',
            field=models.PositiveBigIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='overview',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='risks',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='job',
            name='where',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='work_end_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='work_environment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='work_start_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='association',
            field=models.ManyToManyField(blank=True, related_name='job_category_associations', to='users.association'),
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='overview',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='jobsubcategory',
            name='association',
            field=models.ManyToManyField(blank=True, related_name='job_subcategory_associations', to='users.association'),
        ),
        migrations.AddField(
            model_name='jobsubcategory',
            name='overview',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='skill',
            name='association',
            field=models.ManyToManyField(blank=True, related_name='skill_associations', to='users.association'),
        ),
        migrations.AddField(
            model_name='skill',
            name='group',
            field=models.CharField(blank=True, choices=[('soft', 'Soft'), ('hard', 'Hard')], max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='skill',
            name='overview',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='SubTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('outlook_details', models.TextField(blank=True, null=True)),
                ('outlook_summary', models.CharField(blank=True, default='', max_length=32)),
                ('work_start_time', models.TimeField(blank=True, null=True)),
                ('work_end_time', models.TimeField(blank=True, null=True)),
                ('min_salary', models.PositiveBigIntegerField(blank=True, null=True)),
                ('max_salary', models.PositiveBigIntegerField(blank=True, null=True)),
                ('risks', models.TextField(blank=True, default='')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_subtitle', to='skillsets.job')),
                ('skills', models.ManyToManyField(blank=True, to='skillsets.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveBigIntegerField()),
                ('description', models.CharField(max_length=255)),
                ('association', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='step_association', to='users.association')),
                ('category', models.ManyToManyField(blank=True, to='skillsets.jobcategory')),
                ('job', models.ManyToManyField(blank=True, to='skillsets.job')),
                ('level', models.ManyToManyField(blank=True, to='skillsets.level')),
                ('subcategory', models.ManyToManyField(blank=True, to='skillsets.jobsubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('category', models.ManyToManyField(blank=True, related_name='category_roles', to='skillsets.jobcategory')),
                ('job', models.ManyToManyField(blank=True, related_name='job_roles', to='skillsets.job')),
                ('level', models.ManyToManyField(blank=True, related_name='level_roles', to='skillsets.level')),
                ('subcategory', models.ManyToManyField(blank=True, related_name='subcategory_roles', to='skillsets.jobsubcategory')),
                ('subtitle', models.ManyToManyField(blank=True, related_name='subtitle_roles', to='skillsets.subtitle')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_level', to='skillsets.job'),
        ),
        migrations.AddField(
            model_name='level',
            name='skills',
            field=models.ManyToManyField(blank=True, to='skillsets.skill'),
        ),
    ]
